/*
 * Corals app
 * This version includes cashback module
 *
 * OpenAPI spec version: 1.13.2
 * Contact: contact@corals.life
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package life.corals.merchant.client.model;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Body13
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-09-19T07:17:58.745Z[GMT]")
public class Body13 {
  @SerializedName("deviceid")
  private String deviceid = null;

  @SerializedName("mer_id")
  private String merId = null;

  @SerializedName("sessiontoken")
  private String sessiontoken = null;

  @SerializedName("update")
  private Boolean update = null;

  @SerializedName("cashcampaigns")
  private List<MerchantcampaignppcupdatemCashcampaigns> cashcampaigns = new ArrayList<MerchantcampaignppcupdatemCashcampaigns>();

  public Body13 deviceid(String deviceid) {
    this.deviceid = deviceid;
    return this;
  }

   /**
   * Get deviceid
   * @return deviceid
  **/
  @Schema(required = true, description = "")
  public String getDeviceid() {
    return deviceid;
  }

  public void setDeviceid(String deviceid) {
    this.deviceid = deviceid;
  }

  public Body13 merId(String merId) {
    this.merId = merId;
    return this;
  }

   /**
   * Get merId
   * @return merId
  **/
  @Schema(required = true, description = "")
  public String getMerId() {
    return merId;
  }

  public void setMerId(String merId) {
    this.merId = merId;
  }

  public Body13 sessiontoken(String sessiontoken) {
    this.sessiontoken = sessiontoken;
    return this;
  }

   /**
   * Get sessiontoken
   * @return sessiontoken
  **/
  @Schema(required = true, description = "")
  public String getSessiontoken() {
    return sessiontoken;
  }

  public void setSessiontoken(String sessiontoken) {
    this.sessiontoken = sessiontoken;
  }

  public Body13 update(Boolean update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(required = true, description = "")
  public Boolean isUpdate() {
    return update;
  }

  public void setUpdate(Boolean update) {
    this.update = update;
  }

  public Body13 cashcampaigns(List<MerchantcampaignppcupdatemCashcampaigns> cashcampaigns) {
    this.cashcampaigns = cashcampaigns;
    return this;
  }

  public Body13 addCashcampaignsItem(MerchantcampaignppcupdatemCashcampaigns cashcampaignsItem) {
    this.cashcampaigns.add(cashcampaignsItem);
    return this;
  }

   /**
   * Get cashcampaigns
   * @return cashcampaigns
  **/
  @Schema(required = true, description = "")
  public List<MerchantcampaignppcupdatemCashcampaigns> getCashcampaigns() {
    return cashcampaigns;
  }

  public void setCashcampaigns(List<MerchantcampaignppcupdatemCashcampaigns> cashcampaigns) {
    this.cashcampaigns = cashcampaigns;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body13 body13 = (Body13) o;
    return Objects.equals(this.deviceid, body13.deviceid) &&
        Objects.equals(this.merId, body13.merId) &&
        Objects.equals(this.sessiontoken, body13.sessiontoken) &&
        Objects.equals(this.update, body13.update) &&
        Objects.equals(this.cashcampaigns, body13.cashcampaigns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceid, merId, sessiontoken, update, cashcampaigns);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body13 {\n");

    sb.append("    deviceid: ").append(toIndentedString(deviceid)).append("\n");
    sb.append("    merId: ").append(toIndentedString(merId)).append("\n");
    sb.append("    sessiontoken: ").append(toIndentedString(sessiontoken)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    cashcampaigns: ").append(toIndentedString(cashcampaigns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
