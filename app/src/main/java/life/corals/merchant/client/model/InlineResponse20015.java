/*
 * Corals app
 * This version includes cashback module
 *
 * OpenAPI spec version: 1.13.2
 * Contact: contact@corals.life
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package life.corals.merchant.client.model;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * InlineResponse20015
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-09-19T07:17:58.745Z[GMT]")
public class InlineResponse20015 {
  @SerializedName("sessiontoken")
  private String sessiontoken = null;

  @SerializedName("points_issued")
  private String pointsIssued = null;

  @SerializedName("points_total")
  private String pointsTotal = null;

  @SerializedName("points_expiry")
  private String pointsExpiry = null;

  @SerializedName("cust_id")
  private String custId = null;

  @SerializedName("is_new_customer")
  private String isNewCustomer = null;

  @SerializedName("is_cust_not_usingapp")
  private String isCustNotUsingapp = null;

  @SerializedName("wallet_balance")
  private String walletBalance = null;

  @SerializedName("wallet_expiry_dt")
  private String walletExpiryDt = null;

  @SerializedName("invite_sms_msg")
  private String inviteSmsMsg = null;

  public InlineResponse20015 sessiontoken(String sessiontoken) {
    this.sessiontoken = sessiontoken;
    return this;
  }

   /**
   * Get sessiontoken
   * @return sessiontoken
  **/
  @Schema(description = "")
  public String getSessiontoken() {
    return sessiontoken;
  }

  public void setSessiontoken(String sessiontoken) {
    this.sessiontoken = sessiontoken;
  }

  public InlineResponse20015 pointsIssued(String pointsIssued) {
    this.pointsIssued = pointsIssued;
    return this;
  }

   /**
   * Get pointsIssued
   * @return pointsIssued
  **/
  @Schema(description = "")
  public String getPointsIssued() {
    return pointsIssued;
  }

  public void setPointsIssued(String pointsIssued) {
    this.pointsIssued = pointsIssued;
  }

  public InlineResponse20015 pointsTotal(String pointsTotal) {
    this.pointsTotal = pointsTotal;
    return this;
  }

   /**
   * Get pointsTotal
   * @return pointsTotal
  **/
  @Schema(description = "")
  public String getPointsTotal() {
    return pointsTotal;
  }

  public void setPointsTotal(String pointsTotal) {
    this.pointsTotal = pointsTotal;
  }

  public InlineResponse20015 pointsExpiry(String pointsExpiry) {
    this.pointsExpiry = pointsExpiry;
    return this;
  }

   /**
   * Get pointsExpiry
   * @return pointsExpiry
  **/
  @Schema(description = "")
  public String getPointsExpiry() {
    return pointsExpiry;
  }

  public void setPointsExpiry(String pointsExpiry) {
    this.pointsExpiry = pointsExpiry;
  }

  public InlineResponse20015 custId(String custId) {
    this.custId = custId;
    return this;
  }

   /**
   * Get custId
   * @return custId
  **/
  @Schema(description = "")
  public String getCustId() {
    return custId;
  }

  public void setCustId(String custId) {
    this.custId = custId;
  }

  public InlineResponse20015 isNewCustomer(String isNewCustomer) {
    this.isNewCustomer = isNewCustomer;
    return this;
  }

   /**
   * Get isNewCustomer
   * @return isNewCustomer
  **/
  @Schema(description = "")
  public String getIsNewCustomer() {
    return isNewCustomer;
  }

  public void setIsNewCustomer(String isNewCustomer) {
    this.isNewCustomer = isNewCustomer;
  }

  public InlineResponse20015 isCustNotUsingapp(String isCustNotUsingapp) {
    this.isCustNotUsingapp = isCustNotUsingapp;
    return this;
  }

   /**
   * Get isCustNotUsingapp
   * @return isCustNotUsingapp
  **/
  @Schema(description = "")
  public String getIsCustNotUsingapp() {
    return isCustNotUsingapp;
  }

  public void setIsCustNotUsingapp(String isCustNotUsingapp) {
    this.isCustNotUsingapp = isCustNotUsingapp;
  }

  public InlineResponse20015 walletBalance(String walletBalance) {
    this.walletBalance = walletBalance;
    return this;
  }

   /**
   * Get walletBalance
   * @return walletBalance
  **/
  @Schema(description = "")
  public String getWalletBalance() {
    return walletBalance;
  }

  public void setWalletBalance(String walletBalance) {
    this.walletBalance = walletBalance;
  }

  public InlineResponse20015 walletExpiryDt(String walletExpiryDt) {
    this.walletExpiryDt = walletExpiryDt;
    return this;
  }

   /**
   * Get walletExpiryDt
   * @return walletExpiryDt
  **/
  @Schema(description = "")
  public String getWalletExpiryDt() {
    return walletExpiryDt;
  }

  public void setWalletExpiryDt(String walletExpiryDt) {
    this.walletExpiryDt = walletExpiryDt;
  }

  public InlineResponse20015 inviteSmsMsg(String inviteSmsMsg) {
    this.inviteSmsMsg = inviteSmsMsg;
    return this;
  }

   /**
   * Get inviteSmsMsg
   * @return inviteSmsMsg
  **/
  @Schema(description = "")
  public String getInviteSmsMsg() {
    return inviteSmsMsg;
  }

  public void setInviteSmsMsg(String inviteSmsMsg) {
    this.inviteSmsMsg = inviteSmsMsg;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20015 inlineResponse20015 = (InlineResponse20015) o;
    return Objects.equals(this.sessiontoken, inlineResponse20015.sessiontoken) &&
        Objects.equals(this.pointsIssued, inlineResponse20015.pointsIssued) &&
        Objects.equals(this.pointsTotal, inlineResponse20015.pointsTotal) &&
        Objects.equals(this.pointsExpiry, inlineResponse20015.pointsExpiry) &&
        Objects.equals(this.custId, inlineResponse20015.custId) &&
        Objects.equals(this.isNewCustomer, inlineResponse20015.isNewCustomer) &&
        Objects.equals(this.isCustNotUsingapp, inlineResponse20015.isCustNotUsingapp) &&
        Objects.equals(this.walletBalance, inlineResponse20015.walletBalance) &&
        Objects.equals(this.walletExpiryDt, inlineResponse20015.walletExpiryDt) &&
        Objects.equals(this.inviteSmsMsg, inlineResponse20015.inviteSmsMsg);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sessiontoken, pointsIssued, pointsTotal, pointsExpiry, custId, isNewCustomer, isCustNotUsingapp, walletBalance, walletExpiryDt, inviteSmsMsg);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20015 {\n");

    sb.append("    sessiontoken: ").append(toIndentedString(sessiontoken)).append("\n");
    sb.append("    pointsIssued: ").append(toIndentedString(pointsIssued)).append("\n");
    sb.append("    pointsTotal: ").append(toIndentedString(pointsTotal)).append("\n");
    sb.append("    pointsExpiry: ").append(toIndentedString(pointsExpiry)).append("\n");
    sb.append("    custId: ").append(toIndentedString(custId)).append("\n");
    sb.append("    isNewCustomer: ").append(toIndentedString(isNewCustomer)).append("\n");
    sb.append("    isCustNotUsingapp: ").append(toIndentedString(isCustNotUsingapp)).append("\n");
    sb.append("    walletBalance: ").append(toIndentedString(walletBalance)).append("\n");
    sb.append("    walletExpiryDt: ").append(toIndentedString(walletExpiryDt)).append("\n");
    sb.append("    inviteSmsMsg: ").append(toIndentedString(inviteSmsMsg)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
